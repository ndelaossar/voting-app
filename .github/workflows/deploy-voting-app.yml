name: Build / Deploy Voting App

on:
  # we want pull requests so we can build(test) but not push to image registry
  push:
    branches:
      - "main"
    # only build when important files change
    paths:
      - "result/**"
      - 'seed-data/**'
      - 'vote/**'
      - 'worker/**'
      
  pull_request:
    branches:
      - "main"
    # only build when important files change
    paths:
      - "result/**"
      - 'seed-data/**'
      - 'vote/**'
      - 'worker/**'

env:
  REGISTRY: pinoched

jobs:
  build-images:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      # - name: Docker meta
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: |
      #       pinoched/result
      #     tags: |
      #       type=semver,pattern={{version}}
      #       type=semver,pattern={{major}}.{{minor}}
      #       type=semver,pattern={{major}}
      #       type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set VERSION
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

      - name: Build and push result image
        uses: docker/build-push-action@v4
        with:
          dockerfile: result/Dockerfile
          context: result
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/result:${{ env.GITHUB_SHA_SHORT }}
            ${{ secrets.DOCKER_USERNAME }}/result:latest
          # tags: ${{ steps.meta.outputs.tags }}
          # labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push seed image
        uses: docker/build-push-action@v4
        with:
          dockerfile: seed-data/Dockerfile
          context: seed-data
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/seed-data:${{ env.GITHUB_SHA_SHORT }}
            ${{ secrets.DOCKER_USERNAME }}/seed-data:latest

      - name: Build and push vote image
        uses: docker/build-push-action@v4
        with:
          dockerfile: vote/Dockerfile
          context: vote
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/vote:${{ env.GITHUB_SHA_SHORT }}
            ${{ secrets.DOCKER_USERNAME }}/vote:latest

      - name: Build and push worker image
        uses: docker/build-push-action@v4
        with:
          dockerfile: worker/Dockerfile
          context: worker
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/worker:${{ env.GITHUB_SHA_SHORT }}
            ${{ secrets.DOCKER_USERNAME }}/worker:latest


  deploy-vote:
    runs-on: ubuntu-latest
    needs: build-images
    env:
      cluster: "test-cluster"
      namespaces: "ndelaossa"
    steps:
        - 
          name: Check out the repo
          uses: actions/checkout@v3

        - name: Configure AWS Credentials Action For GitHub Actions
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

        - uses: azure/setup-kubectl@v3
          with:
            version: 'v1.25.9' # default is latest stable
          id: install
            
        - name: Update Kubeconfig
          run: aws eks update-kubeconfig --name ${{ env.cluster }} --region us-east-1

        - name: listar nodos
          run: kubectl get nodes -A

        - name: Crear namespaces
          run: |
            namespace="${{ env.namespaces }}"; kubectl get namespace "${{ env.namespaces }}" >/dev/null 2>&1 || kubectl create namespace "${{ env.namespaces }}"

        - name: UPDATE IMAGE VOTE
          run: |
            cd kubernetes
            sed -i "s/TAG/$SHORT_SHA/g" vote-service.yaml
            cat vote-deploy.yaml
        - name: UPDATE IMAGE RESULT
          run: |
            cd kubernetes
            sed -i "s/TAG/$SHORT_SHA/g" result-service.yaml
            cat result-deploy.yaml           
        - name: UPDATE IMAGE WORKER
          run: |
            cd kubernetes
            sed -i "s/TAG/$SHORT_SHA/g" worker-deployment.yaml
            cat worker-deploy.yaml   

        - name: DEPLOY 
          run: |
            cd kubernetes
            kubectl apply -f . -n ${{ env.namespaces }} 
